import com.wiredforcode.gradle.spawn.*


group 'com.worldpay.test'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'project-report'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins' }
    }

    dependencies {
        classpath 'com.wiredforcode:gradle-spawn-plugin:0.8.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
    }
}

dependencies {

    compile 'io.dropwizard:dropwizard-core:1.2.1'
    compile 'com.smoketurner:dropwizard-swagger:1.2.4-1'
    compile 'commons-lang:commons-lang:2.6'

    runtime 'javax.el:el-api:2.2'
    runtime 'el-impl:el-impl:1.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.easytesting', name: 'fest-assert-core', version: '2.0M10'
    testCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: '1.2.1'
    testCompile 'com.jayway.restassured:rest-assured:1.7.2'
    testCompile 'net.javacrumbs.json-unit:json-unit:1.28.2'
    testCompile 'net.javacrumbs.json-unit:json-unit-fluent:1.28.2'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'io.rest-assured:rest-assured:3.0.7'
    testCompile 'io.rest-assured:json-path:3.0.7'


}


// fat jar
mainClassName = 'com.worldpay.test.oferrial.app.OfferialApp'
shadowJar {
    archiveName "${project.name}.jar"
    destinationDir buildDir

    mergeServiceFiles()


    manifest {
        attributes "Implementation-Title": 'oferrial server'
        attributes "Implementation-Version": version
    }

}

// stop | start
apply plugin: 'com.wiredforcode.spawn'
task startServer(type: SpawnProcessTask, dependsOn: assemble) {
    command "java -jar ${buildDir}/${project.name}.jar server ${rootDir}/${project.name}-config.yml"
    ready 'Started Application'
}
task stopServer(type: KillProcessTask)

